from aiogram import Router, F 
from aiogram.types import Message 
from aiogram.fsm.context import FSMContext 
from aiogram.fsm.state import StatesGroup, State 
import os 
from app.keyboards import main_kb 
from app.services import insert_image_and_update_status, upload_to_drive

router = Router() 

class UploadStates(StatesGroup): 
    waiting_for_photo = State() 
    waiting_for_cell = State() 
    
@router.message(F.text == "/start") 
async def start(message: Message): 
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ –∫–∞—Ä—Ç–∏–Ω–æ–∫ –≤ Google Sheets.", reply_markup=main_kb) 

@router.message(F.text == "üì§ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ") 
async def ask_photo(message: Message, state: FSMContext): 
    await message.answer("–û—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ üì∏") 
    await state.set_state(UploadStates.waiting_for_photo) 

@router.message(UploadStates.waiting_for_photo, F.photo) 
async def get_photo(message: Message, state: FSMContext): 
    photo = message.photo[-1] 
    file = await message.bot.get_file(photo.file_id) 
    file_path = f"downloads/{photo.file_id}.jpg" 
    os.makedirs("downloads", exist_ok=True) 
    await message.bot.download_file(file.file_path, file_path) 
    await state.update_data(file_path=file_path) 
    await message.answer("‚úÖ –§–æ—Ç–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ!\n–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏ —è—á–µ–π–∫—É (–Ω–∞–ø—Ä–∏–º–µ—Ä: 123)\n –∏–ª–∏ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é –≤ —Ñ–æ—Ä–º–∞—Ç–µ: 123,456,789") 
    await state.set_state(UploadStates.waiting_for_cell) 
    
@router.message(UploadStates.waiting_for_cell)
async def get_cell(message: Message, state: FSMContext):
    data = await state.get_data()
    file_path = data["file_path"]

    # –°–ø–∏—Å–æ–∫ —Å—Ç—Ä–æ–∫
    rows = [r.strip() for r in message.text.split(",") if r.strip().isdigit()]
    if not rows:
        await message.answer("‚ùå –í–≤–µ–¥–∏ –Ω–æ–º–µ—Ä–∞ —Å—Ç—Ä–æ–∫ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é, –Ω–∞–ø—Ä–∏–º–µ—Ä: 333,123,124")
        return

    image_url = upload_to_drive(file_path, os.path.basename(file_path))

    # –í—Å—Ç–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ + —Å—Ç–∞—Ç—É—Å + –¥–∞—Ç—É
    insert_image_and_update_status(rows, image_url)

    await message.answer(
        f"‚úÖ –ö–∞—Ä—Ç–∏–Ω–∫–∞ –≤—Å—Ç–∞–≤–ª–µ–Ω–∞ –≤ —Å—Ç—Ä–æ–∫–∏ {', '.join(rows)} (–∫–æ–ª–æ–Ω–∫–∞ J).\n"
        f"–°—Ç–∞—Ç—É—Å—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã –≤ –∫–æ–ª–æ–Ω–∫–µ L, –¥–∞—Ç–∞ ‚Äî –≤ –∫–æ–ª–æ–Ω–∫–µ M.",
        reply_markup=main_kb
    )
    await state.clear()